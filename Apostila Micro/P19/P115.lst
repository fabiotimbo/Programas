CCS PCH C Compiler, Version 5.007, 61971               30-dez-19 18:32

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Microcontroladores e dispositivos periféricos\Programas apostila oficiais\P115\P115.lst

               ROM used:   328 bytes (1%)
                           Largest free fragment is 32440
               RAM used:   8 (0%) at main() level
                           8 (0%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   002A
.................... #include <18f4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #byte portd=0xF83 
.................... #fuses HS,CPUDIV1,PLL5,USBDIV 
.................... #use delay(clock=20000000) 
0004:  CLRF   FEA
0006:  MOVLW  08
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  06
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  7B
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETURN 0
.................... //motor 28Byj-48 possui 2048 passos por rotação ou 0,175° /passo 
.................... void main() 
002A:  CLRF   FF8
002C:  BCF    FD0.7
002E:  MOVF   FC1,W
0030:  ANDLW  C0
0032:  IORLW  0F
0034:  MOVWF  FC1
0036:  MOVLW  07
0038:  MOVWF  FB4
003A:  CLRF   06
003C:  MOVLW  02
003E:  MOVWF  05
.................... { 
.................... int16 a=2; //tempo 2ms =>  2048*0,002=4,096 segundos (período do motor) 
.................... port_b_pullups (true); 
0040:  BCF    FF1.7
.................... set_tris_d(0x00); 
0042:  MOVLW  00
0044:  MOVWF  F95
.................... set_tris_b(0xFF); 
0046:  MOVLW  FF
0048:  MOVWF  F93
.................... while(true) 
.................... { 
....................     if ((input(pin_b0)==0)&&(input(pin_b1)==1))//botão b0 pressionado 
004A:  BSF    F93.0
004C:  BTFSC  F81.0
004E:  BRA    00C6
0050:  BSF    F93.1
0052:  BTFSS  F81.1
0054:  BRA    00C6
....................        { 
....................        portd=0b10010000; 
0056:  MOVLW  90
0058:  MOVWF  F83
....................        delay_ms(a); 
005A:  MOVFF  06,07
005E:  INCF   07,F
0060:  DECF   07,F
0062:  BTFSC  FD8.2
0064:  BRA    006C
0066:  SETF   08
0068:  RCALL  0004
006A:  BRA    0060
006C:  MOVFF  05,08
0070:  RCALL  0004
....................        portd=0b00110000; 
0072:  MOVLW  30
0074:  MOVWF  F83
....................        delay_ms(a); 
0076:  MOVFF  06,07
007A:  INCF   07,F
007C:  DECF   07,F
007E:  BTFSC  FD8.2
0080:  BRA    0088
0082:  SETF   08
0084:  RCALL  0004
0086:  BRA    007C
0088:  MOVFF  05,08
008C:  RCALL  0004
....................        portd=0b01100000; 
008E:  MOVLW  60
0090:  MOVWF  F83
....................        delay_ms(a); 
0092:  MOVFF  06,07
0096:  INCF   07,F
0098:  DECF   07,F
009A:  BTFSC  FD8.2
009C:  BRA    00A4
009E:  SETF   08
00A0:  RCALL  0004
00A2:  BRA    0098
00A4:  MOVFF  05,08
00A8:  RCALL  0004
....................        portd=0b11000000; 
00AA:  MOVLW  C0
00AC:  MOVWF  F83
....................        delay_ms(a); 
00AE:  MOVFF  06,07
00B2:  INCF   07,F
00B4:  DECF   07,F
00B6:  BTFSC  FD8.2
00B8:  BRA    00C0
00BA:  SETF   08
00BC:  RCALL  0004
00BE:  BRA    00B4
00C0:  MOVFF  05,08
00C4:  RCALL  0004
....................        } 
....................     if ((input(pin_b0)==1)&&(input(pin_b1)==0))//botão b1 pressionado 
00C6:  BSF    F93.0
00C8:  BTFSS  F81.0
00CA:  BRA    0142
00CC:  BSF    F93.1
00CE:  BTFSC  F81.1
00D0:  BRA    0142
....................        { 
....................        portd=0b11000000; 
00D2:  MOVLW  C0
00D4:  MOVWF  F83
....................        delay_ms(a); 
00D6:  MOVFF  06,07
00DA:  INCF   07,F
00DC:  DECF   07,F
00DE:  BTFSC  FD8.2
00E0:  BRA    00E8
00E2:  SETF   08
00E4:  RCALL  0004
00E6:  BRA    00DC
00E8:  MOVFF  05,08
00EC:  RCALL  0004
....................        portd=0b01100000; 
00EE:  MOVLW  60
00F0:  MOVWF  F83
....................        delay_ms(a); 
00F2:  MOVFF  06,07
00F6:  INCF   07,F
00F8:  DECF   07,F
00FA:  BTFSC  FD8.2
00FC:  BRA    0104
00FE:  SETF   08
0100:  RCALL  0004
0102:  BRA    00F8
0104:  MOVFF  05,08
0108:  RCALL  0004
....................        portd=0b00110000; 
010A:  MOVLW  30
010C:  MOVWF  F83
....................        delay_ms(a); 
010E:  MOVFF  06,07
0112:  INCF   07,F
0114:  DECF   07,F
0116:  BTFSC  FD8.2
0118:  BRA    0120
011A:  SETF   08
011C:  RCALL  0004
011E:  BRA    0114
0120:  MOVFF  05,08
0124:  RCALL  0004
....................        portd=0b10010000; 
0126:  MOVLW  90
0128:  MOVWF  F83
....................        delay_ms(a);       } 
012A:  MOVFF  06,07
012E:  INCF   07,F
0130:  DECF   07,F
0132:  BTFSC  FD8.2
0134:  BRA    013C
0136:  SETF   08
0138:  RCALL  0004
013A:  BRA    0130
013C:  MOVFF  05,08
0140:  RCALL  0004
....................        portd=0b00000000;//evita energizar as bobinas e o aquecimento do motor 
0142:  CLRF   F83
0144:  BRA    004A
.................... }} 
....................  
0146:  SLEEP 

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
