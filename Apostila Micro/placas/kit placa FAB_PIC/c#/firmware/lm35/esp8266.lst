CCS PCH C Compiler, Version 5.007, 61971               15-jan-20 21:34

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Micro\Programas oficiais\Apostila Micro\Comunicação via esp8266\esp8266.lst

               ROM used:   1886 bytes (6%)
                           Largest free fragment is 30878
               RAM used:   39 (2%) at main() level
                           72 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   06FE
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   06A8
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #define led1 pin_d1 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
0096:  MOVLW  8E
0098:  MOVWF  00
009A:  MOVFF  28,01
009E:  MOVFF  27,02
00A2:  CLRF   03
00A4:  MOVF   01,F
00A6:  BNZ   00BA
00A8:  MOVFF  02,01
00AC:  CLRF   02
00AE:  MOVLW  08
00B0:  SUBWF  00,F
00B2:  MOVF   01,F
00B4:  BNZ   00BA
00B6:  CLRF   00
00B8:  BRA    00CA
00BA:  BCF    FD8.0
00BC:  BTFSC  01.7
00BE:  BRA    00C8
00C0:  RLCF   02,F
00C2:  RLCF   01,F
00C4:  DECF   00,F
00C6:  BRA    00BA
00C8:  BCF    01.7
00CA:  GOTO   03A4 (RETURN)
*
00F4:  MOVF   27,W
00F6:  BTFSC  FD8.2
00F8:  BRA    01DC
00FA:  MOVWF  00
00FC:  MOVF   2B,W
00FE:  BTFSC  FD8.2
0100:  BRA    01DC
0102:  ADDWF  00,F
0104:  BNC   010E
0106:  MOVLW  81
0108:  ADDWF  00,F
010A:  BC    01DC
010C:  BRA    0116
010E:  MOVLW  7F
0110:  SUBWF  00,F
0112:  BNC   01DC
0114:  BZ    01DC
0116:  MOVFF  28,2F
011A:  MOVF   2C,W
011C:  XORWF  2F,F
011E:  BSF    28.7
0120:  BSF    2C.7
0122:  MOVF   2A,W
0124:  MULWF  2E
0126:  MOVFF  FF4,31
012A:  MOVF   29,W
012C:  MULWF  2D
012E:  MOVFF  FF4,03
0132:  MOVFF  FF3,30
0136:  MULWF  2E
0138:  MOVF   FF3,W
013A:  ADDWF  31,F
013C:  MOVF   FF4,W
013E:  ADDWFC 30,F
0140:  MOVLW  00
0142:  ADDWFC 03,F
0144:  MOVF   2A,W
0146:  MULWF  2D
0148:  MOVF   FF3,W
014A:  ADDWF  31,F
014C:  MOVF   FF4,W
014E:  ADDWFC 30,F
0150:  MOVLW  00
0152:  CLRF   02
0154:  ADDWFC 03,F
0156:  ADDWFC 02,F
0158:  MOVF   28,W
015A:  MULWF  2E
015C:  MOVF   FF3,W
015E:  ADDWF  30,F
0160:  MOVF   FF4,W
0162:  ADDWFC 03,F
0164:  MOVLW  00
0166:  ADDWFC 02,F
0168:  MOVF   28,W
016A:  MULWF  2D
016C:  MOVF   FF3,W
016E:  ADDWF  03,F
0170:  MOVF   FF4,W
0172:  ADDWFC 02,F
0174:  MOVLW  00
0176:  CLRF   01
0178:  ADDWFC 01,F
017A:  MOVF   2A,W
017C:  MULWF  2C
017E:  MOVF   FF3,W
0180:  ADDWF  30,F
0182:  MOVF   FF4,W
0184:  ADDWFC 03,F
0186:  MOVLW  00
0188:  ADDWFC 02,F
018A:  ADDWFC 01,F
018C:  MOVF   29,W
018E:  MULWF  2C
0190:  MOVF   FF3,W
0192:  ADDWF  03,F
0194:  MOVF   FF4,W
0196:  ADDWFC 02,F
0198:  MOVLW  00
019A:  ADDWFC 01,F
019C:  MOVF   28,W
019E:  MULWF  2C
01A0:  MOVF   FF3,W
01A2:  ADDWF  02,F
01A4:  MOVF   FF4,W
01A6:  ADDWFC 01,F
01A8:  INCF   00,F
01AA:  BTFSC  01.7
01AC:  BRA    01B8
01AE:  RLCF   30,F
01B0:  RLCF   03,F
01B2:  RLCF   02,F
01B4:  RLCF   01,F
01B6:  DECF   00,F
01B8:  MOVLW  00
01BA:  BTFSS  30.7
01BC:  BRA    01D2
01BE:  INCF   03,F
01C0:  ADDWFC 02,F
01C2:  ADDWFC 01,F
01C4:  MOVF   01,W
01C6:  BNZ   01D2
01C8:  MOVF   02,W
01CA:  BNZ   01D2
01CC:  MOVF   03,W
01CE:  BNZ   01D2
01D0:  INCF   00,F
01D2:  BTFSC  2F.7
01D4:  BSF    01.7
01D6:  BTFSS  2F.7
01D8:  BCF    01.7
01DA:  BRA    01E4
01DC:  CLRF   00
01DE:  CLRF   01
01E0:  CLRF   02
01E2:  CLRF   03
01E4:  GOTO   03DC (RETURN)
01E8:  MOVF   27,W
01EA:  SUBLW  B6
01EC:  MOVWF  27
01EE:  CLRF   03
01F0:  MOVFF  28,2B
01F4:  BSF    28.7
01F6:  BCF    FD8.0
01F8:  RRCF   28,F
01FA:  RRCF   29,F
01FC:  RRCF   2A,F
01FE:  RRCF   03,F
0200:  RRCF   02,F
0202:  RRCF   01,F
0204:  RRCF   00,F
0206:  DECFSZ 27,F
0208:  BRA    01F6
020A:  BTFSS  2B.7
020C:  BRA    0224
020E:  COMF   00,F
0210:  COMF   01,F
0212:  COMF   02,F
0214:  COMF   03,F
0216:  INCF   00,F
0218:  BTFSC  FD8.2
021A:  INCF   01,F
021C:  BTFSC  FD8.2
021E:  INCF   02,F
0220:  BTFSC  FD8.2
0222:  INCF   03,F
0224:  GOTO   03FE (RETURN)
0228:  BTFSC  FD8.1
022A:  BRA    0232
022C:  CLRF   FEA
022E:  MOVLW  43
0230:  MOVWF  FE9
0232:  CLRF   00
0234:  CLRF   01
0236:  CLRF   02
0238:  CLRF   03
023A:  CLRF   43
023C:  CLRF   44
023E:  CLRF   45
0240:  CLRF   46
0242:  MOVF   42,W
0244:  IORWF  41,W
0246:  IORWF  40,W
0248:  IORWF  3F,W
024A:  BZ    02A4
024C:  MOVLW  20
024E:  MOVWF  47
0250:  BCF    FD8.0
0252:  RLCF   3B,F
0254:  RLCF   3C,F
0256:  RLCF   3D,F
0258:  RLCF   3E,F
025A:  RLCF   43,F
025C:  RLCF   44,F
025E:  RLCF   45,F
0260:  RLCF   46,F
0262:  MOVF   42,W
0264:  SUBWF  46,W
0266:  BNZ   0278
0268:  MOVF   41,W
026A:  SUBWF  45,W
026C:  BNZ   0278
026E:  MOVF   40,W
0270:  SUBWF  44,W
0272:  BNZ   0278
0274:  MOVF   3F,W
0276:  SUBWF  43,W
0278:  BNC   0298
027A:  MOVF   3F,W
027C:  SUBWF  43,F
027E:  MOVF   40,W
0280:  BTFSS  FD8.0
0282:  INCFSZ 40,W
0284:  SUBWF  44,F
0286:  MOVF   41,W
0288:  BTFSS  FD8.0
028A:  INCFSZ 41,W
028C:  SUBWF  45,F
028E:  MOVF   42,W
0290:  BTFSS  FD8.0
0292:  INCFSZ 42,W
0294:  SUBWF  46,F
0296:  BSF    FD8.0
0298:  RLCF   00,F
029A:  RLCF   01,F
029C:  RLCF   02,F
029E:  RLCF   03,F
02A0:  DECFSZ 47,F
02A2:  BRA    0250
02A4:  MOVFF  43,FEF
02A8:  MOVFF  44,FEC
02AC:  MOVFF  45,FEC
02B0:  MOVFF  46,FEC
02B4:  RETURN 0
02B6:  MOVF   2E,W
02B8:  CLRF   01
02BA:  SUBWF  2D,W
02BC:  BC    02C4
02BE:  MOVFF  2D,00
02C2:  BRA    02DC
02C4:  CLRF   00
02C6:  MOVLW  08
02C8:  MOVWF  2F
02CA:  RLCF   2D,F
02CC:  RLCF   00,F
02CE:  MOVF   2E,W
02D0:  SUBWF  00,W
02D2:  BTFSC  FD8.0
02D4:  MOVWF  00
02D6:  RLCF   01,F
02D8:  DECFSZ 2F,F
02DA:  BRA    02CA
02DC:  RETURN 0
02DE:  MOVLW  20
02E0:  BTFSS  28.4
02E2:  MOVLW  30
02E4:  MOVWF  29
02E6:  MOVFF  27,00
02EA:  BTFSS  27.7
02EC:  BRA    02FE
02EE:  COMF   00,F
02F0:  INCF   00,F
02F2:  MOVFF  00,27
02F6:  MOVLW  2D
02F8:  MOVWF  29
02FA:  BSF    28.7
02FC:  BSF    28.0
02FE:  MOVF   01,W
0300:  MOVFF  27,2D
0304:  MOVLW  64
0306:  MOVWF  2E
0308:  RCALL  02B6
030A:  MOVFF  00,27
030E:  MOVLW  30
0310:  ADDWF  01,W
0312:  MOVWF  2A
0314:  MOVFF  27,2D
0318:  MOVLW  0A
031A:  MOVWF  2E
031C:  RCALL  02B6
031E:  MOVLW  30
0320:  ADDWF  00,W
0322:  MOVWF  2C
0324:  MOVLW  30
0326:  ADDWF  01,W
0328:  MOVWF  2B
032A:  MOVFF  29,00
032E:  MOVLW  30
0330:  SUBWF  2A,W
0332:  BZ    033C
0334:  BSF    28.1
0336:  BTFSC  28.7
0338:  BSF    28.2
033A:  BRA    0360
033C:  MOVFF  29,2A
0340:  MOVLW  20
0342:  MOVWF  29
0344:  MOVLW  30
0346:  SUBWF  2B,W
0348:  BZ    0352
034A:  BSF    28.0
034C:  BTFSC  28.7
034E:  BSF    28.1
0350:  BRA    0360
0352:  BTFSS  FD8.2
0354:  BSF    28.0
0356:  BNZ   0360
0358:  MOVFF  2A,2B
035C:  MOVLW  20
035E:  MOVWF  2A
0360:  BTFSC  28.2
0362:  BRA    036E
0364:  BTFSC  28.1
0366:  BRA    0376
0368:  BTFSC  28.0
036A:  BRA    037E
036C:  BRA    0386
036E:  MOVF   29,W
0370:  BTFSS  F9E.4
0372:  BRA    0370
0374:  MOVWF  FAD
0376:  MOVF   2A,W
0378:  BTFSS  F9E.4
037A:  BRA    0378
037C:  MOVWF  FAD
037E:  MOVF   2B,W
0380:  BTFSS  F9E.4
0382:  BRA    0380
0384:  MOVWF  FAD
0386:  MOVF   2C,W
0388:  BTFSS  F9E.4
038A:  BRA    0388
038C:  MOVWF  FAD
038E:  RETURN 0
....................  
.................... #list 
....................  
.................... #fuses HS, NOWDT, PUT, BROWNOUT, NOLVP, CPUDIV1, PLL5,USBDIV  
.................... #device adc=10 
.................... #use delay(clock=20000000) 
*
00CE:  CLRF   FEA
00D0:  MOVLW  27
00D2:  MOVWF  FE9
00D4:  MOVF   FEF,W
00D6:  BZ    00F2
00D8:  MOVLW  06
00DA:  MOVWF  01
00DC:  CLRF   00
00DE:  DECFSZ 00,F
00E0:  BRA    00DE
00E2:  DECFSZ 01,F
00E4:  BRA    00DC
00E6:  MOVLW  7B
00E8:  MOVWF  00
00EA:  DECFSZ 00,F
00EC:  BRA    00EA
00EE:  DECFSZ FEF,F
00F0:  BRA    00D8
00F2:  RETURN 0
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
.................... float32 lm; 
.................... unsigned int32 ad0; 
.................... int m,c,d,u; 
.................... void protocolo() 
.................... { 
.................... lm=read_adc(); 
*
0390:  BSF    FC2.1
0392:  BTFSC  FC2.1
0394:  BRA    0392
0396:  MOVFF  FC4,03
039A:  MOVFF  FC3,27
039E:  MOVFF  FC4,28
03A2:  BRA    0096
03A4:  MOVFF  03,19
03A8:  MOVFF  02,18
03AC:  MOVFF  01,17
03B0:  MOVFF  00,16
.................... delay_ms(10); 
03B4:  MOVLW  0A
03B6:  MOVWF  27
03B8:  RCALL  00CE
.................... lm=lm*0.488758; 
03BA:  MOVFF  19,2A
03BE:  MOVFF  18,29
03C2:  MOVFF  17,28
03C6:  MOVFF  16,27
03CA:  MOVLW  7D
03CC:  MOVWF  2E
03CE:  MOVLW  3E
03D0:  MOVWF  2D
03D2:  MOVLW  7A
03D4:  MOVWF  2C
03D6:  MOVLW  7D
03D8:  MOVWF  2B
03DA:  BRA    00F4
03DC:  MOVFF  03,19
03E0:  MOVFF  02,18
03E4:  MOVFF  01,17
03E8:  MOVFF  00,16
.................... ad0=lm; 
03EC:  MOVFF  19,2A
03F0:  MOVFF  18,29
03F4:  MOVFF  17,28
03F8:  MOVFF  16,27
03FC:  BRA    01E8
03FE:  MOVFF  03,1D
0402:  MOVFF  02,1C
0406:  MOVFF  01,1B
040A:  MOVFF  00,1A
.................... delay_ms(10); 
040E:  MOVLW  0A
0410:  MOVWF  27
0412:  RCALL  00CE
.................... m= ad0/1000; 
0414:  BCF    FD8.1
0416:  MOVFF  1D,3E
041A:  MOVFF  1C,3D
041E:  MOVFF  1B,3C
0422:  MOVFF  1A,3B
0426:  CLRF   42
0428:  CLRF   41
042A:  MOVLW  03
042C:  MOVWF  40
042E:  MOVLW  E8
0430:  MOVWF  3F
0432:  RCALL  0228
0434:  MOVFF  00,1E
.................... c=((ad0%1000)/100); 
0438:  BSF    FD8.1
043A:  CLRF   FEA
043C:  MOVLW  27
043E:  MOVWF  FE9
0440:  MOVFF  1D,3E
0444:  MOVFF  1C,3D
0448:  MOVFF  1B,3C
044C:  MOVFF  1A,3B
0450:  CLRF   42
0452:  CLRF   41
0454:  MOVLW  03
0456:  MOVWF  40
0458:  MOVLW  E8
045A:  MOVWF  3F
045C:  RCALL  0228
045E:  MOVFF  2A,2E
0462:  MOVFF  29,2D
0466:  MOVFF  28,2C
046A:  MOVFF  27,2B
046E:  MOVFF  FEA,30
0472:  MOVFF  FE9,2F
0476:  BCF    FD8.1
0478:  MOVFF  2A,3E
047C:  MOVFF  29,3D
0480:  MOVFF  28,3C
0484:  MOVFF  27,3B
0488:  CLRF   42
048A:  CLRF   41
048C:  CLRF   40
048E:  MOVLW  64
0490:  MOVWF  3F
0492:  RCALL  0228
0494:  MOVFF  30,FEA
0498:  MOVFF  2F,FE9
049C:  MOVFF  00,1F
.................... d=((ad0%1000)%100)/10; 
04A0:  BSF    FD8.1
04A2:  CLRF   FEA
04A4:  MOVLW  27
04A6:  MOVWF  FE9
04A8:  MOVFF  1D,3E
04AC:  MOVFF  1C,3D
04B0:  MOVFF  1B,3C
04B4:  MOVFF  1A,3B
04B8:  CLRF   42
04BA:  CLRF   41
04BC:  MOVLW  03
04BE:  MOVWF  40
04C0:  MOVLW  E8
04C2:  MOVWF  3F
04C4:  RCALL  0228
04C6:  MOVFF  2A,2E
04CA:  MOVFF  29,2D
04CE:  MOVFF  28,2C
04D2:  MOVFF  27,2B
04D6:  MOVFF  FEA,30
04DA:  MOVFF  FE9,2F
04DE:  BSF    FD8.1
04E0:  CLRF   FEA
04E2:  MOVLW  31
04E4:  MOVWF  FE9
04E6:  MOVFF  2A,3E
04EA:  MOVFF  29,3D
04EE:  MOVFF  28,3C
04F2:  MOVFF  27,3B
04F6:  CLRF   42
04F8:  CLRF   41
04FA:  CLRF   40
04FC:  MOVLW  64
04FE:  MOVWF  3F
0500:  RCALL  0228
0502:  MOVFF  31,00
0506:  MOVFF  32,01
050A:  MOVFF  33,02
050E:  MOVFF  34,03
0512:  MOVFF  30,FEA
0516:  MOVFF  2F,FE9
051A:  MOVFF  34,2E
051E:  MOVFF  33,2D
0522:  MOVFF  32,2C
0526:  MOVFF  31,2B
052A:  MOVFF  FEA,36
052E:  MOVFF  FE9,35
0532:  BCF    FD8.1
0534:  MOVFF  34,3E
0538:  MOVFF  33,3D
053C:  MOVFF  32,3C
0540:  MOVFF  31,3B
0544:  CLRF   42
0546:  CLRF   41
0548:  CLRF   40
054A:  MOVLW  0A
054C:  MOVWF  3F
054E:  RCALL  0228
0550:  MOVFF  36,FEA
0554:  MOVFF  35,FE9
0558:  MOVFF  00,20
.................... u=(((ad0%1000)%100)%10)/1; 
055C:  BSF    FD8.1
055E:  CLRF   FEA
0560:  MOVLW  27
0562:  MOVWF  FE9
0564:  MOVFF  1D,3E
0568:  MOVFF  1C,3D
056C:  MOVFF  1B,3C
0570:  MOVFF  1A,3B
0574:  CLRF   42
0576:  CLRF   41
0578:  MOVLW  03
057A:  MOVWF  40
057C:  MOVLW  E8
057E:  MOVWF  3F
0580:  RCALL  0228
0582:  MOVFF  2A,2E
0586:  MOVFF  29,2D
058A:  MOVFF  28,2C
058E:  MOVFF  27,2B
0592:  MOVFF  FEA,30
0596:  MOVFF  FE9,2F
059A:  BSF    FD8.1
059C:  CLRF   FEA
059E:  MOVLW  31
05A0:  MOVWF  FE9
05A2:  MOVFF  2A,3E
05A6:  MOVFF  29,3D
05AA:  MOVFF  28,3C
05AE:  MOVFF  27,3B
05B2:  CLRF   42
05B4:  CLRF   41
05B6:  CLRF   40
05B8:  MOVLW  64
05BA:  MOVWF  3F
05BC:  RCALL  0228
05BE:  MOVFF  31,00
05C2:  MOVFF  32,01
05C6:  MOVFF  33,02
05CA:  MOVFF  34,03
05CE:  MOVFF  30,FEA
05D2:  MOVFF  2F,FE9
05D6:  MOVFF  34,2E
05DA:  MOVFF  33,2D
05DE:  MOVFF  32,2C
05E2:  MOVFF  31,2B
05E6:  MOVFF  FEA,36
05EA:  MOVFF  FE9,35
05EE:  BSF    FD8.1
05F0:  CLRF   FEA
05F2:  MOVLW  37
05F4:  MOVWF  FE9
05F6:  MOVFF  34,3E
05FA:  MOVFF  33,3D
05FE:  MOVFF  32,3C
0602:  MOVFF  31,3B
0606:  CLRF   42
0608:  CLRF   41
060A:  CLRF   40
060C:  MOVLW  0A
060E:  MOVWF  3F
0610:  RCALL  0228
0612:  MOVFF  36,FEA
0616:  MOVFF  35,FE9
061A:  MOVFF  37,21
.................... delay_ms(10); 
061E:  MOVLW  0A
0620:  MOVWF  27
0622:  RCALL  00CE
.................... //printf(" %f ",lux); 
.................... printf("&"); 
0624:  MOVLW  26
0626:  BTFSS  F9E.4
0628:  BRA    0626
062A:  MOVWF  FAD
.................... delay_ms(10); 
062C:  MOVLW  0A
062E:  MOVWF  27
0630:  RCALL  00CE
.................... printf("%d",m); 
0632:  MOVFF  1E,27
0636:  MOVLW  18
0638:  MOVWF  28
063A:  RCALL  02DE
.................... delay_ms(10); 
063C:  MOVLW  0A
063E:  MOVWF  27
0640:  RCALL  00CE
.................... printf("%d",c); 
0642:  MOVFF  1F,27
0646:  MOVLW  18
0648:  MOVWF  28
064A:  RCALL  02DE
.................... delay_ms(10); 
064C:  MOVLW  0A
064E:  MOVWF  27
0650:  RCALL  00CE
.................... printf("%d",d); 
0652:  MOVFF  20,27
0656:  MOVLW  18
0658:  MOVWF  28
065A:  RCALL  02DE
.................... delay_ms(10); 
065C:  MOVLW  0A
065E:  MOVWF  27
0660:  RCALL  00CE
.................... printf("%d",u); 
0662:  MOVFF  21,27
0666:  MOVLW  18
0668:  MOVWF  28
066A:  RCALL  02DE
.................... delay_ms(10); 
066C:  MOVLW  0A
066E:  MOVWF  27
0670:  RCALL  00CE
.................... printf("f"); 
0672:  MOVLW  66
0674:  BTFSS  F9E.4
0676:  BRA    0674
0678:  MOVWF  FAD
.................... delay_ms(10); 
067A:  MOVLW  0A
067C:  MOVWF  27
067E:  RCALL  00CE
.................... printf("f"); 
0680:  MOVLW  66
0682:  BTFSS  F9E.4
0684:  BRA    0682
0686:  MOVWF  FAD
.................... delay_ms(10); 
0688:  MOVLW  0A
068A:  MOVWF  27
068C:  RCALL  00CE
.................... printf("\r\n"); 
068E:  MOVLW  0D
0690:  BTFSS  F9E.4
0692:  BRA    0690
0694:  MOVWF  FAD
0696:  MOVLW  0A
0698:  BTFSS  F9E.4
069A:  BRA    0698
069C:  MOVWF  FAD
.................... delay_ms(10); 
069E:  MOVLW  0A
06A0:  MOVWF  27
06A2:  RCALL  00CE
06A4:  GOTO   06F8 (RETURN)
.................... } 
....................  
.................... #int_timer0 
.................... void funcao_tempo() 
.................... { 
.................... static boolean flag; 
.................... static unsigned int32 n; 
.................... set_timer0(131+get_timer0()); 
06A8:  MOVF   FD6,W
06AA:  MOVFF  FD7,03
06AE:  ADDLW  83
06B0:  MOVWF  27
06B2:  MOVLW  00
06B4:  ADDWFC FD7,W
06B6:  MOVWF  FD7
06B8:  MOVFF  27,FD6
.................... n++; 
06BC:  MOVLW  01
06BE:  ADDWF  23,F
06C0:  BTFSC  FD8.0
06C2:  INCF   24,F
06C4:  BTFSC  FD8.2
06C6:  INCF   25,F
06C8:  BTFSC  FD8.2
06CA:  INCF   26,F
.................... if (n==625) 
06CC:  MOVF   23,W
06CE:  SUBLW  71
06D0:  BNZ   06F8
06D2:  MOVF   24,W
06D4:  SUBLW  02
06D6:  BNZ   06F8
06D8:  MOVF   25,F
06DA:  BNZ   06F8
06DC:  MOVF   26,F
06DE:  BNZ   06F8
.................... { 
.................... n=0; 
06E0:  CLRF   26
06E2:  CLRF   25
06E4:  CLRF   24
06E6:  CLRF   23
.................... flag=!flag; 
06E8:  BTG    22.0
.................... output_bit(led1,flag); 
06EA:  BTFSC  22.0
06EC:  BRA    06F2
06EE:  BCF    F8C.1
06F0:  BRA    06F4
06F2:  BSF    F8C.1
06F4:  BCF    F95.1
.................... protocolo(); 
06F6:  BRA    0390
.................... } 
06F8:  BCF    FF2.2
06FA:  GOTO   0054
.................... } 
....................  
.................... void main() 
06FE:  CLRF   FF8
0700:  BCF    FD0.7
0702:  BSF    07.7
0704:  BSF    FB8.3
0706:  MOVLW  08
0708:  MOVWF  FAF
070A:  MOVLW  02
070C:  MOVWF  FB0
070E:  MOVLW  A6
0710:  MOVWF  FAC
0712:  MOVLW  90
0714:  MOVWF  FAB
0716:  MOVF   FC1,W
0718:  ANDLW  C0
071A:  IORLW  0F
071C:  MOVWF  FC1
071E:  MOVLW  07
0720:  MOVWF  FB4
0722:  BCF    22.0
0724:  BCF    22.0
0726:  CLRF   23
0728:  CLRF   24
072A:  CLRF   25
072C:  CLRF   26
.................... { 
.................... setup_timer_0 (RTCC_DIV_64|RTCC_INTERNAL | RTCC_8_BIT ); //8 bits 
072E:  MOVLW  C5
0730:  MOVWF  FD5
.................... set_timer0(131);                                              
0732:  CLRF   FD7
0734:  MOVLW  83
0736:  MOVWF  FD6
.................... enable_interrupts(GLOBAL); 
0738:  MOVLW  C0
073A:  IORWF  FF2,F
.................... enable_interrupts(INT_TIMER0); 
073C:  BSF    FF2.5
.................... setup_adc_ports(an0); 
073E:  MOVF   FC1,W
0740:  ANDLW  C0
0742:  IORLW  0E
0744:  MOVWF  FC1
.................... setup_adc(adc_clock_internal); 
0746:  MOVF   FC0,W
0748:  ANDLW  C0
074A:  IORLW  07
074C:  MOVWF  FC0
074E:  BSF    FC0.7
0750:  BSF    FC2.0
.................... set_adc_channel(0); 
0752:  MOVLW  00
0754:  MOVWF  01
0756:  MOVF   FC2,W
0758:  ANDLW  C3
075A:  IORWF  01,W
075C:  MOVWF  FC2
.................... while(true) 
.................... { } } 
075E:  BRA    075E
....................  
0760:  SLEEP 

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
