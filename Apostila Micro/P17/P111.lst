CCS PCH C Compiler, Version 5.007, 61971               30-dez-19 19:38

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Microcontroladores e dispositivos periféricos\Programas apostila oficiais\Apostila Micro\P111\P111.lst

               ROM used:   1964 bytes (6%)
                           Largest free fragment is 30800
               RAM used:   36 (2%) at main() level
                           68 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   06A4
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #define led1 pin_d1 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
*
00F0:  DATA 0D,0A
00F2:  DATA 53,65
00F4:  DATA 6C,65
00F6:  DATA 63,69
00F8:  DATA 6F,6E
00FA:  DATA 65,20
00FC:  DATA 61,20
00FE:  DATA 70,6F
0100:  DATA 73,69
0102:  DATA 63,E3
0104:  DATA 6F,3A
0106:  DATA 0D,0A
0108:  DATA 00,00
010A:  DATA 20,20
010C:  DATA 20,20
010E:  DATA 31,29
0110:  DATA 20,30
0112:  DATA B0,20
0114:  DATA 0D,0A
0116:  DATA 00,00
0118:  DATA 20,20
011A:  DATA 20,20
011C:  DATA 32,29
011E:  DATA 20,34
0120:  DATA 35,B0
0122:  DATA 20,0D
0124:  DATA 0A,00
0126:  DATA 20,20
0128:  DATA 20,20
012A:  DATA 33,29
012C:  DATA 20,39
012E:  DATA 30,B0
0130:  DATA 20,0D
0132:  DATA 0A,00
0134:  DATA 20,20
0136:  DATA 20,20
0138:  DATA 34,29
013A:  DATA 20,31
013C:  DATA 33,35
013E:  DATA B0,20
0140:  DATA 0D,0A
0142:  DATA 00,00
0144:  DATA 20,20
0146:  DATA 20,20
0148:  DATA 35,29
014A:  DATA 20,31
014C:  DATA 38,30
014E:  DATA B0,20
0150:  DATA 0D,0A
0152:  DATA 00,00
0154:  DATA 20,50
0156:  DATA 6F,73
0158:  DATA 69,63
015A:  DATA 61,6F
015C:  DATA 20,31
015E:  DATA 20,20
0160:  DATA 00,00
0162:  DATA 20,50
0164:  DATA 6F,73
0166:  DATA 69,63
0168:  DATA 61,6F
016A:  DATA 20,32
016C:  DATA 20,20
016E:  DATA 00,00
0170:  DATA 20,50
0172:  DATA 6F,73
0174:  DATA 69,63
0176:  DATA 61,6F
0178:  DATA 20,33
017A:  DATA 20,20
017C:  DATA 00,00
017E:  DATA 20,50
0180:  DATA 6F,73
0182:  DATA 69,63
0184:  DATA 61,6F
0186:  DATA 20,34
0188:  DATA 20,20
018A:  DATA 00,00
018C:  DATA 20,50
018E:  DATA 6F,73
0190:  DATA 69,63
0192:  DATA 61,6F
0194:  DATA 20,35
0196:  DATA 20,20
0198:  DATA 00,00
019A:  TBLRD*+
019C:  MOVF   FF5,F
019E:  BZ    01BA
01A0:  MOVFF  FF6,2B
01A4:  MOVFF  FF7,2C
01A8:  MOVF   FF5,W
01AA:  BTFSS  F9E.4
01AC:  BRA    01AA
01AE:  MOVWF  FAD
01B0:  MOVFF  2B,FF6
01B4:  MOVFF  2C,FF7
01B8:  BRA    019A
01BA:  RETURN 0
01BC:  MOVLW  8E
01BE:  MOVWF  00
01C0:  MOVFF  2D,01
01C4:  MOVFF  2C,02
01C8:  CLRF   03
01CA:  MOVF   01,F
01CC:  BNZ   01E0
01CE:  MOVFF  02,01
01D2:  CLRF   02
01D4:  MOVLW  08
01D6:  SUBWF  00,F
01D8:  MOVF   01,F
01DA:  BNZ   01E0
01DC:  CLRF   00
01DE:  BRA    01F0
01E0:  BCF    FD8.0
01E2:  BTFSC  01.7
01E4:  BRA    01EE
01E6:  RLCF   02,F
01E8:  RLCF   01,F
01EA:  DECF   00,F
01EC:  BRA    01E0
01EE:  BCF    01.7
01F0:  GOTO   05DA (RETURN)
01F4:  MOVF   2C,W
01F6:  BTFSC  FD8.2
01F8:  BRA    02DC
01FA:  MOVWF  00
01FC:  MOVF   30,W
01FE:  BTFSC  FD8.2
0200:  BRA    02DC
0202:  ADDWF  00,F
0204:  BNC   020E
0206:  MOVLW  81
0208:  ADDWF  00,F
020A:  BC    02DC
020C:  BRA    0216
020E:  MOVLW  7F
0210:  SUBWF  00,F
0212:  BNC   02DC
0214:  BZ    02DC
0216:  MOVFF  2D,34
021A:  MOVF   31,W
021C:  XORWF  34,F
021E:  BSF    2D.7
0220:  BSF    31.7
0222:  MOVF   2F,W
0224:  MULWF  33
0226:  MOVFF  FF4,36
022A:  MOVF   2E,W
022C:  MULWF  32
022E:  MOVFF  FF4,03
0232:  MOVFF  FF3,35
0236:  MULWF  33
0238:  MOVF   FF3,W
023A:  ADDWF  36,F
023C:  MOVF   FF4,W
023E:  ADDWFC 35,F
0240:  MOVLW  00
0242:  ADDWFC 03,F
0244:  MOVF   2F,W
0246:  MULWF  32
0248:  MOVF   FF3,W
024A:  ADDWF  36,F
024C:  MOVF   FF4,W
024E:  ADDWFC 35,F
0250:  MOVLW  00
0252:  CLRF   02
0254:  ADDWFC 03,F
0256:  ADDWFC 02,F
0258:  MOVF   2D,W
025A:  MULWF  33
025C:  MOVF   FF3,W
025E:  ADDWF  35,F
0260:  MOVF   FF4,W
0262:  ADDWFC 03,F
0264:  MOVLW  00
0266:  ADDWFC 02,F
0268:  MOVF   2D,W
026A:  MULWF  32
026C:  MOVF   FF3,W
026E:  ADDWF  03,F
0270:  MOVF   FF4,W
0272:  ADDWFC 02,F
0274:  MOVLW  00
0276:  CLRF   01
0278:  ADDWFC 01,F
027A:  MOVF   2F,W
027C:  MULWF  31
027E:  MOVF   FF3,W
0280:  ADDWF  35,F
0282:  MOVF   FF4,W
0284:  ADDWFC 03,F
0286:  MOVLW  00
0288:  ADDWFC 02,F
028A:  ADDWFC 01,F
028C:  MOVF   2E,W
028E:  MULWF  31
0290:  MOVF   FF3,W
0292:  ADDWF  03,F
0294:  MOVF   FF4,W
0296:  ADDWFC 02,F
0298:  MOVLW  00
029A:  ADDWFC 01,F
029C:  MOVF   2D,W
029E:  MULWF  31
02A0:  MOVF   FF3,W
02A2:  ADDWF  02,F
02A4:  MOVF   FF4,W
02A6:  ADDWFC 01,F
02A8:  INCF   00,F
02AA:  BTFSC  01.7
02AC:  BRA    02B8
02AE:  RLCF   35,F
02B0:  RLCF   03,F
02B2:  RLCF   02,F
02B4:  RLCF   01,F
02B6:  DECF   00,F
02B8:  MOVLW  00
02BA:  BTFSS  35.7
02BC:  BRA    02D2
02BE:  INCF   03,F
02C0:  ADDWFC 02,F
02C2:  ADDWFC 01,F
02C4:  MOVF   01,W
02C6:  BNZ   02D2
02C8:  MOVF   02,W
02CA:  BNZ   02D2
02CC:  MOVF   03,W
02CE:  BNZ   02D2
02D0:  INCF   00,F
02D2:  BTFSC  34.7
02D4:  BSF    01.7
02D6:  BTFSS  34.7
02D8:  BCF    01.7
02DA:  BRA    02E4
02DC:  CLRF   00
02DE:  CLRF   01
02E0:  CLRF   02
02E2:  CLRF   03
02E4:  RETURN 0
02E6:  MOVLW  80
02E8:  BTFSC  FD8.1
02EA:  XORWF  35,F
02EC:  CLRF   3A
02EE:  CLRF   3B
02F0:  MOVFF  31,39
02F4:  MOVF   35,W
02F6:  XORWF  39,F
02F8:  MOVF   30,W
02FA:  BTFSC  FD8.2
02FC:  BRA    04B6
02FE:  MOVWF  38
0300:  MOVWF  00
0302:  MOVF   34,W
0304:  BTFSC  FD8.2
0306:  BRA    04C8
0308:  SUBWF  38,F
030A:  BTFSC  FD8.2
030C:  BRA    0410
030E:  BNC   038A
0310:  MOVFF  35,3E
0314:  BSF    3E.7
0316:  MOVFF  36,3D
031A:  MOVFF  37,3C
031E:  CLRF   3B
0320:  BCF    FD8.0
0322:  RRCF   3E,F
0324:  RRCF   3D,F
0326:  RRCF   3C,F
0328:  RRCF   3B,F
032A:  DECFSZ 38,F
032C:  BRA    031E
032E:  BTFSS  39.7
0330:  BRA    0338
0332:  BSF    3A.0
0334:  BRA    04F0
0336:  BCF    3A.0
0338:  BCF    38.0
033A:  BSF    3A.4
033C:  CLRF   FEA
033E:  MOVLW  33
0340:  MOVWF  FE9
0342:  BRA    0516
0344:  BCF    3A.4
0346:  BTFSC  39.7
0348:  BRA    035E
034A:  BTFSS  38.0
034C:  BRA    0374
034E:  RRCF   3E,F
0350:  RRCF   3D,F
0352:  RRCF   3C,F
0354:  RRCF   3B,F
0356:  INCF   00,F
0358:  BTFSC  FD8.2
035A:  BRA    04E6
035C:  BRA    0374
035E:  BTFSC  3E.7
0360:  BRA    037A
0362:  BCF    FD8.0
0364:  RLCF   3B,F
0366:  RLCF   3C,F
0368:  RLCF   3D,F
036A:  RLCF   3E,F
036C:  DECF   00,F
036E:  BTFSC  FD8.2
0370:  BRA    04E6
0372:  BRA    035E
0374:  BSF    3A.6
0376:  BRA    044E
0378:  BCF    3A.6
037A:  MOVFF  31,39
037E:  BTFSS  31.7
0380:  BRA    0386
0382:  BSF    3E.7
0384:  BRA    04D8
0386:  BCF    3E.7
0388:  BRA    04D8
038A:  MOVFF  34,38
038E:  MOVFF  34,00
0392:  MOVF   30,W
0394:  SUBWF  38,F
0396:  MOVFF  31,3E
039A:  BSF    3E.7
039C:  MOVFF  32,3D
03A0:  MOVFF  33,3C
03A4:  CLRF   3B
03A6:  BCF    FD8.0
03A8:  RRCF   3E,F
03AA:  RRCF   3D,F
03AC:  RRCF   3C,F
03AE:  RRCF   3B,F
03B0:  DECFSZ 38,F
03B2:  BRA    03A4
03B4:  BTFSS  39.7
03B6:  BRA    03BE
03B8:  BSF    3A.1
03BA:  BRA    04F0
03BC:  BCF    3A.1
03BE:  BCF    38.0
03C0:  BSF    3A.5
03C2:  CLRF   FEA
03C4:  MOVLW  37
03C6:  MOVWF  FE9
03C8:  BRA    0516
03CA:  BCF    3A.5
03CC:  BTFSC  39.7
03CE:  BRA    03E4
03D0:  BTFSS  38.0
03D2:  BRA    03FA
03D4:  RRCF   3E,F
03D6:  RRCF   3D,F
03D8:  RRCF   3C,F
03DA:  RRCF   3B,F
03DC:  INCF   00,F
03DE:  BTFSC  FD8.2
03E0:  BRA    04E6
03E2:  BRA    03FA
03E4:  BTFSC  3E.7
03E6:  BRA    0400
03E8:  BCF    FD8.0
03EA:  RLCF   3B,F
03EC:  RLCF   3C,F
03EE:  RLCF   3D,F
03F0:  RLCF   3E,F
03F2:  DECF   00,F
03F4:  BTFSC  FD8.2
03F6:  BRA    04E6
03F8:  BRA    03E4
03FA:  BSF    3A.7
03FC:  BRA    044E
03FE:  BCF    3A.7
0400:  MOVFF  35,39
0404:  BTFSS  35.7
0406:  BRA    040C
0408:  BSF    3E.7
040A:  BRA    04D8
040C:  BCF    3E.7
040E:  BRA    04D8
0410:  MOVFF  35,3E
0414:  BSF    3E.7
0416:  MOVFF  36,3D
041A:  MOVFF  37,3C
041E:  BTFSS  39.7
0420:  BRA    042A
0422:  BCF    3E.7
0424:  BSF    3A.2
0426:  BRA    04F0
0428:  BCF    3A.2
042A:  CLRF   3B
042C:  BCF    38.0
042E:  CLRF   FEA
0430:  MOVLW  33
0432:  MOVWF  FE9
0434:  BRA    0516
0436:  BTFSC  39.7
0438:  BRA    0472
043A:  MOVFF  31,39
043E:  BTFSS  38.0
0440:  BRA    044E
0442:  RRCF   3E,F
0444:  RRCF   3D,F
0446:  RRCF   3C,F
0448:  RRCF   3B,F
044A:  INCF   00,F
044C:  BZ    04E6
044E:  BTFSS  3B.7
0450:  BRA    0468
0452:  INCF   3C,F
0454:  BNZ   0468
0456:  INCF   3D,F
0458:  BNZ   0468
045A:  INCF   3E,F
045C:  BNZ   0468
045E:  RRCF   3E,F
0460:  RRCF   3D,F
0462:  RRCF   3C,F
0464:  INCF   00,F
0466:  BZ    04E6
0468:  BTFSC  3A.6
046A:  BRA    0378
046C:  BTFSC  3A.7
046E:  BRA    03FE
0470:  BRA    04AA
0472:  MOVLW  80
0474:  XORWF  3E,F
0476:  BTFSS  3E.7
0478:  BRA    0482
047A:  BRA    04F0
047C:  MOVFF  35,39
0480:  BRA    0496
0482:  MOVFF  31,39
0486:  MOVF   3E,F
0488:  BNZ   0496
048A:  MOVF   3D,F
048C:  BNZ   0496
048E:  MOVF   3C,F
0490:  BNZ   0496
0492:  CLRF   00
0494:  BRA    04D8
0496:  BTFSC  3E.7
0498:  BRA    04AA
049A:  BCF    FD8.0
049C:  RLCF   3B,F
049E:  RLCF   3C,F
04A0:  RLCF   3D,F
04A2:  RLCF   3E,F
04A4:  DECFSZ 00,F
04A6:  BRA    0496
04A8:  BRA    04E6
04AA:  BTFSS  39.7
04AC:  BRA    04B2
04AE:  BSF    3E.7
04B0:  BRA    04D8
04B2:  BCF    3E.7
04B4:  BRA    04D8
04B6:  MOVFF  34,00
04BA:  MOVFF  35,3E
04BE:  MOVFF  36,3D
04C2:  MOVFF  37,3C
04C6:  BRA    04D8
04C8:  MOVFF  30,00
04CC:  MOVFF  31,3E
04D0:  MOVFF  32,3D
04D4:  MOVFF  33,3C
04D8:  MOVFF  3E,01
04DC:  MOVFF  3D,02
04E0:  MOVFF  3C,03
04E4:  BRA    054E
04E6:  CLRF   00
04E8:  CLRF   01
04EA:  CLRF   02
04EC:  CLRF   03
04EE:  BRA    054E
04F0:  CLRF   3B
04F2:  COMF   3C,F
04F4:  COMF   3D,F
04F6:  COMF   3E,F
04F8:  COMF   3B,F
04FA:  INCF   3B,F
04FC:  BNZ   0508
04FE:  INCF   3C,F
0500:  BNZ   0508
0502:  INCF   3D,F
0504:  BNZ   0508
0506:  INCF   3E,F
0508:  BTFSC  3A.0
050A:  BRA    0336
050C:  BTFSC  3A.1
050E:  BRA    03BC
0510:  BTFSC  3A.2
0512:  BRA    0428
0514:  BRA    047C
0516:  MOVF   FEF,W
0518:  ADDWF  3C,F
051A:  BNC   0526
051C:  INCF   3D,F
051E:  BNZ   0526
0520:  INCF   3E,F
0522:  BTFSC  FD8.2
0524:  BSF    38.0
0526:  MOVF   FED,F
0528:  MOVF   FEF,W
052A:  ADDWF  3D,F
052C:  BNC   0534
052E:  INCF   3E,F
0530:  BTFSC  FD8.2
0532:  BSF    38.0
0534:  MOVF   FED,F
0536:  MOVF   FEF,W
0538:  BTFSC  FEF.7
053A:  BRA    053E
053C:  XORLW  80
053E:  ADDWF  3E,F
0540:  BTFSC  FD8.0
0542:  BSF    38.0
0544:  BTFSC  3A.4
0546:  BRA    0344
0548:  BTFSC  3A.5
054A:  BRA    03CA
054C:  BRA    0436
054E:  GOTO   065C (RETURN)
0552:  MOVLW  8E
0554:  MOVWF  00
0556:  MOVF   2C,W
0558:  SUBWF  00,F
055A:  MOVFF  2D,02
055E:  MOVFF  2E,01
0562:  BSF    02.7
0564:  MOVF   00,F
0566:  BZ    057A
0568:  BCF    FD8.0
056A:  MOVF   02,F
056C:  BNZ   0572
056E:  MOVF   01,F
0570:  BZ    057A
0572:  RRCF   02,F
0574:  RRCF   01,F
0576:  DECFSZ 00,F
0578:  BRA    0568
057A:  BTFSS  2D.7
057C:  BRA    0588
057E:  COMF   01,F
0580:  COMF   02,F
0582:  INCF   01,F
0584:  BTFSC  FD8.2
0586:  INCF   02,F
0588:  GOTO   066E (RETURN)
....................  
.................... #list 
....................  
.................... #fuses HS,CPUDIV1,PLL5,USBDIV  //Configuração dos fusíveis 
.................... #use delay(clock=20000000) 
058C:  MOVLW  03
058E:  SUBWF  2D,F
0590:  BNC   05A4
0592:  CLRF   FEA
0594:  MOVLW  2D
0596:  MOVWF  FE9
0598:  MOVF   FEF,W
059A:  BZ    05A4
059C:  BRA    05A0
059E:  BRA    05A0
05A0:  DECFSZ FEF,F
05A2:  BRA    059E
05A4:  RETURN 0
05A6:  CLRF   FEA
05A8:  MOVLW  2C
05AA:  MOVWF  FE9
05AC:  MOVF   FEF,W
05AE:  BZ    05CA
05B0:  MOVLW  06
05B2:  MOVWF  01
05B4:  CLRF   00
05B6:  DECFSZ 00,F
05B8:  BRA    05B6
05BA:  DECFSZ 01,F
05BC:  BRA    05B4
05BE:  MOVLW  7B
05C0:  MOVWF  00
05C2:  DECFSZ 00,F
05C4:  BRA    05C2
05C6:  DECFSZ FEF,F
05C8:  BRA    05B0
05CA:  GOTO   0698 (RETURN)
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
.................... const int32 tm=3036; 
.................... const int16 pos_min=500, pos_max=2400 ;  //Valores de ajuste do servo 
.................... long int  angulo=0,tempo2; 
.................... int n2; 
.................... float tempo; 
.................... #int_timer1 
.................... void funcao_tempo() 
.................... {static boolean led; 
.................... static unsigned int32 n; 
.................... set_timer1(tm+get_timer1()); 
*
0096:  MOVF   FCE,W
0098:  MOVFF  FCF,03
009C:  ADDLW  DC
009E:  MOVWF  40
00A0:  MOVLW  0B
00A2:  ADDWFC FCF,W
00A4:  CLRF   42
00A6:  BCF    FD8.2
00A8:  BTFSC  FD8.0
00AA:  INCF   42,F
00AC:  MOVWF  FCF
00AE:  MOVFF  40,FCE
.................... n++; 
00B2:  MOVLW  01
00B4:  ADDWF  20,F
00B6:  BTFSC  FD8.0
00B8:  INCF   21,F
00BA:  BTFSC  FD8.2
00BC:  INCF   22,F
00BE:  BTFSC  FD8.2
00C0:  INCF   23,F
.................... if (n==5) 
00C2:  MOVF   20,W
00C4:  SUBLW  05
00C6:  BNZ   00EA
00C8:  MOVF   21,F
00CA:  BNZ   00EA
00CC:  MOVF   22,F
00CE:  BNZ   00EA
00D0:  MOVF   23,F
00D2:  BNZ   00EA
.................... {n=0;led=!led;output_bit(led1,led);} 
00D4:  CLRF   23
00D6:  CLRF   22
00D8:  CLRF   21
00DA:  CLRF   20
00DC:  BTG    1F.0
00DE:  BTFSC  1F.0
00E0:  BRA    00E6
00E2:  BCF    F8C.1
00E4:  BRA    00E8
00E6:  BSF    F8C.1
00E8:  BCF    F95.1
00EA:  BCF    F9E.0
00EC:  GOTO   0054
.................... } 
.................... void servo( int angulo) 
.................... {         do{ 
....................          output_high(pin_d2); 
*
05CE:  BCF    F95.2
05D0:  BSF    F8C.2
....................          tempo=(angulo* 0.00555555555);//converte para % em float 
05D2:  CLRF   2D
05D4:  MOVFF  2B,2C
05D8:  BRA    01BC
05DA:  MOVFF  03,2F
05DE:  MOVFF  02,2E
05E2:  MOVFF  01,2D
05E6:  MOVFF  00,2C
05EA:  MOVLW  61
05EC:  MOVWF  33
05EE:  MOVLW  0B
05F0:  MOVWF  32
05F2:  MOVLW  36
05F4:  MOVWF  31
05F6:  MOVLW  77
05F8:  MOVWF  30
05FA:  RCALL  01F4
05FC:  MOVFF  03,1E
0600:  MOVFF  02,1D
0604:  MOVFF  01,1C
0608:  MOVFF  00,1B
....................          tempo2=(tempo*(pos_max-pos_min)) + pos_min; //converte para tempo 
060C:  MOVFF  1E,2F
0610:  MOVFF  1D,2E
0614:  MOVFF  1C,2D
0618:  MOVFF  1B,2C
061C:  CLRF   33
061E:  MOVLW  80
0620:  MOVWF  32
0622:  MOVLW  6D
0624:  MOVWF  31
0626:  MOVLW  89
0628:  MOVWF  30
062A:  RCALL  01F4
062C:  MOVFF  03,2F
0630:  MOVFF  02,2E
0634:  MOVFF  01,2D
0638:  MOVFF  00,2C
063C:  BCF    FD8.1
063E:  MOVFF  03,33
0642:  MOVFF  02,32
0646:  MOVFF  01,31
064A:  MOVFF  00,30
064E:  CLRF   37
0650:  CLRF   36
0652:  MOVLW  7A
0654:  MOVWF  35
0656:  MOVLW  87
0658:  MOVWF  34
065A:  BRA    02E6
065C:  MOVFF  03,2F
0660:  MOVFF  02,2E
0664:  MOVFF  01,2D
0668:  MOVFF  00,2C
066C:  BRA    0552
066E:  MOVFF  02,19
0672:  MOVFF  01,18
....................          delay_us(tempo2); 
0676:  MOVFF  19,2C
067A:  INCF   2C,F
067C:  DECF   2C,F
067E:  BTFSC  FD8.2
0680:  BRA    0688
0682:  SETF   2D
0684:  RCALL  058C
0686:  BRA    067C
0688:  MOVFF  18,2D
068C:  RCALL  058C
....................          output_low (pin_d2); 
068E:  BCF    F95.2
0690:  BCF    F8C.2
....................          delay_ms(20); 
0692:  MOVLW  14
0694:  MOVWF  2C
0696:  BRA    05A6
....................          n2--; 
0698:  DECF   1A,F
....................          }while (n2>0); 
069A:  MOVF   1A,F
069C:  BNZ   05CE
....................          n2=20; 
069E:  MOVLW  14
06A0:  MOVWF  1A
06A2:  RETURN 0
....................  } 
.................... void main() 
06A4:  CLRF   FF8
06A6:  BCF    FD0.7
06A8:  BSF    07.7
06AA:  BSF    FB8.3
06AC:  MOVLW  08
06AE:  MOVWF  FAF
06B0:  MOVLW  02
06B2:  MOVWF  FB0
06B4:  MOVLW  A6
06B6:  MOVWF  FAC
06B8:  MOVLW  90
06BA:  MOVWF  FAB
06BC:  CLRF   17
06BE:  CLRF   16
06C0:  MOVF   FC1,W
06C2:  ANDLW  C0
06C4:  IORLW  0F
06C6:  MOVWF  FC1
06C8:  MOVLW  07
06CA:  MOVWF  FB4
06CC:  BCF    1F.0
06CE:  BCF    1F.0
06D0:  CLRF   20
06D2:  CLRF   21
06D4:  CLRF   22
06D6:  CLRF   23
.................... {port_b_pullups(TRUE); 
06D8:  BCF    FF1.7
.................... enable_interrupts(GLOBAL); 
06DA:  MOVLW  C0
06DC:  IORWF  FF2,F
.................... enable_interrupts(INT_timer1); 
06DE:  BSF    F9D.0
.................... setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
06E0:  MOVLW  B5
06E2:  MOVWF  FCD
.................... set_timer1(tm);   
06E4:  MOVLW  0B
06E6:  MOVWF  FCF
06E8:  MOVLW  DC
06EA:  MOVWF  FCE
.................... while(true) 
.................... {  char selecao; 
....................    int  value, n2=20; 
....................    unsigned int32 posicao; 
06EC:  MOVLW  14
06EE:  MOVWF  26
....................    printf("\r\nSelecione a posicão:\r\n"); 
06F0:  MOVLW  F0
06F2:  MOVWF  FF6
06F4:  MOVLW  00
06F6:  MOVWF  FF7
06F8:  RCALL  019A
....................    printf("    1) 0° \r\n"); 
06FA:  MOVLW  0A
06FC:  MOVWF  FF6
06FE:  MOVLW  01
0700:  MOVWF  FF7
0702:  RCALL  019A
....................    printf("    2) 45° \r\n"); 
0704:  MOVLW  18
0706:  MOVWF  FF6
0708:  MOVLW  01
070A:  MOVWF  FF7
070C:  RCALL  019A
....................    printf("    3) 90° \r\n"); 
070E:  MOVLW  26
0710:  MOVWF  FF6
0712:  MOVLW  01
0714:  MOVWF  FF7
0716:  RCALL  019A
....................    printf("    4) 135° \r\n"); 
0718:  MOVLW  34
071A:  MOVWF  FF6
071C:  MOVLW  01
071E:  MOVWF  FF7
0720:  RCALL  019A
....................    printf("    5) 180° \r\n"); 
0722:  MOVLW  44
0724:  MOVWF  FF6
0726:  MOVLW  01
0728:  MOVWF  FF7
072A:  RCALL  019A
....................   do { 
....................    selecao=getc(); 
072C:  BTFSS  F9E.5
072E:  BRA    072C
0730:  MOVFF  FAE,24
....................   } while((selecao<'1')||(selecao>'5'));   
0734:  MOVF   24,W
0736:  SUBLW  30
0738:  BC    072C
073A:  MOVF   24,W
073C:  SUBLW  35
073E:  BNC   072C
....................   if (selecao=='1')       { printf(" Posicao 1  "); servo(0); } 
0740:  MOVF   24,W
0742:  SUBLW  31
0744:  BNZ   0754
0746:  MOVLW  54
0748:  MOVWF  FF6
074A:  MOVLW  01
074C:  MOVWF  FF7
074E:  RCALL  019A
0750:  CLRF   2B
0752:  RCALL  05CE
....................   if (selecao=='2')       { printf(" Posicao 2  "); servo(45); } 
0754:  MOVF   24,W
0756:  SUBLW  32
0758:  BNZ   076A
075A:  MOVLW  62
075C:  MOVWF  FF6
075E:  MOVLW  01
0760:  MOVWF  FF7
0762:  RCALL  019A
0764:  MOVLW  2D
0766:  MOVWF  2B
0768:  RCALL  05CE
....................   if (selecao=='3')       { printf(" Posicao 3  "); servo(90); } 
076A:  MOVF   24,W
076C:  SUBLW  33
076E:  BNZ   0780
0770:  MOVLW  70
0772:  MOVWF  FF6
0774:  MOVLW  01
0776:  MOVWF  FF7
0778:  RCALL  019A
077A:  MOVLW  5A
077C:  MOVWF  2B
077E:  RCALL  05CE
....................   if (selecao=='4')       { printf(" Posicao 4  "); servo(135);}                   
0780:  MOVF   24,W
0782:  SUBLW  34
0784:  BNZ   0796
0786:  MOVLW  7E
0788:  MOVWF  FF6
078A:  MOVLW  01
078C:  MOVWF  FF7
078E:  RCALL  019A
0790:  MOVLW  87
0792:  MOVWF  2B
0794:  RCALL  05CE
....................   if (selecao=='5')       { printf(" Posicao 5  "); servo(180);}}} 
0796:  MOVF   24,W
0798:  SUBLW  35
079A:  BNZ   07AC
079C:  MOVLW  8C
079E:  MOVWF  FF6
07A0:  MOVLW  01
07A2:  MOVWF  FF7
07A4:  RCALL  019A
07A6:  MOVLW  B4
07A8:  MOVWF  2B
07AA:  RCALL  05CE
07AC:  BRA    06EC
....................  
07AE:  SLEEP 

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
