CCS PCH C Compiler, Version 5.007, 61971               17-ago-20 11:05

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Micro\Programas oficiais\Apostila Micro\P83\P83.lst

               ROM used:   586 bytes (2%)
                           Largest free fragment is 32178
               RAM used:   32 (2%) at main() level
                           46 (2%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   01FA
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0146
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #define led0 pin_d0 
.................... #define led1 pin_d1 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
0096:  MOVLW  8E
0098:  MOVWF  00
009A:  MOVFF  25,01
009E:  MOVFF  24,02
00A2:  CLRF   03
00A4:  MOVF   01,F
00A6:  BNZ   00BA
00A8:  MOVFF  02,01
00AC:  CLRF   02
00AE:  MOVLW  08
00B0:  SUBWF  00,F
00B2:  MOVF   01,F
00B4:  BNZ   00BA
00B6:  CLRF   00
00B8:  BRA    00CA
00BA:  BCF    FD8.0
00BC:  BTFSC  01.7
00BE:  BRA    00C8
00C0:  RLCF   02,F
00C2:  RLCF   01,F
00C4:  DECF   00,F
00C6:  BRA    00BA
00C8:  BCF    01.7
00CA:  GOTO   01B6 (RETURN)
00CE:  MOVFF  25,2C
00D2:  MOVF   29,W
00D4:  XORWF  2C,F
00D6:  BTFSS  2C.7
00D8:  BRA    00E4
00DA:  BCF    FD8.2
00DC:  BCF    FD8.0
00DE:  BTFSC  25.7
00E0:  BSF    FD8.0
00E2:  BRA    0142
00E4:  MOVFF  25,2C
00E8:  MOVFF  28,2D
00EC:  MOVF   24,W
00EE:  SUBWF  2D,F
00F0:  BZ    00FE
00F2:  BTFSS  2C.7
00F4:  BRA    0142
00F6:  MOVF   FD8,W
00F8:  XORLW  01
00FA:  MOVWF  FD8
00FC:  BRA    0142
00FE:  MOVFF  29,2D
0102:  MOVF   25,W
0104:  SUBWF  2D,F
0106:  BZ    0114
0108:  BTFSS  2C.7
010A:  BRA    0142
010C:  MOVF   FD8,W
010E:  XORLW  01
0110:  MOVWF  FD8
0112:  BRA    0142
0114:  MOVFF  2A,2D
0118:  MOVF   26,W
011A:  SUBWF  2D,F
011C:  BZ    012A
011E:  BTFSS  2C.7
0120:  BRA    0142
0122:  MOVF   FD8,W
0124:  XORLW  01
0126:  MOVWF  FD8
0128:  BRA    0142
012A:  MOVFF  2B,2D
012E:  MOVF   27,W
0130:  SUBWF  2D,F
0132:  BZ    0140
0134:  BTFSS  2C.7
0136:  BRA    0142
0138:  MOVF   FD8,W
013A:  XORLW  01
013C:  MOVWF  FD8
013E:  BRA    0142
0140:  BCF    FD8.0
0142:  GOTO   01EE (RETURN)
....................  
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HS, NOWDT, PUT, BROWNOUT, NOLVP, CPUDIV1,PLL5,USBDIV 
.................... #use delay(clock=20000000) 
.................... #int_timer1 
.................... void funcao_tempo() 
.................... {float ad1;static boolean led=1;static unsigned int32 n; 
.................... set_timer1(3036+get_timer1()); 
0146:  MOVF   FCE,W
0148:  MOVFF  FCF,03
014C:  ADDLW  DC
014E:  MOVWF  24
0150:  MOVLW  0B
0152:  ADDWFC FCF,W
0154:  MOVWF  FCF
0156:  MOVFF  24,FCE
.................... n++; 
015A:  MOVLW  01
015C:  ADDWF  17,F
015E:  BTFSC  FD8.0
0160:  INCF   18,F
0162:  BTFSC  FD8.2
0164:  INCF   19,F
0166:  BTFSC  FD8.2
0168:  INCF   1A,F
.................... if (n==5) 
016A:  MOVF   17,W
016C:  SUBLW  05
016E:  BNZ   0192
0170:  MOVF   18,F
0172:  BNZ   0192
0174:  MOVF   19,F
0176:  BNZ   0192
0178:  MOVF   1A,F
017A:  BNZ   0192
.................... {n=0; 
017C:  CLRF   1A
017E:  CLRF   19
0180:  CLRF   18
0182:  CLRF   17
.................... led=!led; 
0184:  BTG    16.0
.................... output_bit(led1,led); 
0186:  BTFSC  16.0
0188:  BRA    018E
018A:  BCF    F8C.1
018C:  BRA    0190
018E:  BSF    F8C.1
0190:  BCF    F95.1
.................... } 
....................  if ((input(pin_b0)==0)&&(input(pin_b1)==0))  
0192:  BSF    F93.0
0194:  BTFSC  F81.0
0196:  BRA    01A2
0198:  BSF    F93.1
019A:  BTFSC  F81.1
019C:  BRA    01A2
.................... {output_high(led0);} 
019E:  BCF    F95.0
01A0:  BSF    F8C.0
.................... ad1=read_adc(); 
01A2:  BSF    FC2.1
01A4:  BTFSC  FC2.1
01A6:  BRA    01A4
01A8:  MOVFF  FC4,03
01AC:  MOVFF  FC3,24
01B0:  MOVFF  FC4,25
01B4:  BRA    0096
01B6:  MOVFF  03,23
01BA:  MOVFF  02,22
01BE:  MOVFF  01,21
01C2:  MOVFF  00,20
.................... delay_us(100); 
01C6:  MOVLW  A6
01C8:  MOVWF  00
01CA:  DECFSZ 00,F
01CC:  BRA    01CA
01CE:  NOP   
*
01F4:  BCF    F9E.0
01F6:  GOTO   0054
....................  if (ad1<200)  { output_low(led0);  }} 
*
01D0:  MOVFF  23,27
01D4:  MOVFF  22,26
01D8:  MOVFF  21,25
01DC:  MOVFF  20,24
01E0:  CLRF   2B
01E2:  CLRF   2A
01E4:  MOVLW  48
01E6:  MOVWF  29
01E8:  MOVLW  86
01EA:  MOVWF  28
01EC:  BRA    00CE
01EE:  BNC   01F4
01F0:  BCF    F95.0
01F2:  BCF    F8C.0
.................... void main() 
*
01FA:  CLRF   FF8
01FC:  BCF    FD0.7
01FE:  BSF    07.7
0200:  BSF    16.0
0202:  MOVF   FC1,W
0204:  ANDLW  C0
0206:  IORLW  0F
0208:  MOVWF  FC1
020A:  MOVLW  07
020C:  MOVWF  FB4
020E:  CLRF   17
0210:  CLRF   18
0212:  CLRF   19
0214:  CLRF   1A
.................... {float ad1; 
.................... char selection; 
.................... port_b_pullups(TRUE); 
0216:  BCF    FF1.7
.................... enable_interrupts(GLOBAL); 
0218:  MOVLW  C0
021A:  IORWF  FF2,F
.................... enable_interrupts(INT_timer1); 
021C:  BSF    F9D.0
.................... setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
021E:  MOVLW  B5
0220:  MOVWF  FCD
.................... set_timer1(3036);                                              
0222:  MOVLW  0B
0224:  MOVWF  FCF
0226:  MOVLW  DC
0228:  MOVWF  FCE
.................... setup_adc_ports(AN0); 
022A:  MOVF   FC1,W
022C:  ANDLW  C0
022E:  IORLW  0E
0230:  MOVWF  FC1
.................... SETUP_ADC(ADC_CLOCK_INTERNAL); 
0232:  MOVF   FC0,W
0234:  ANDLW  C0
0236:  IORLW  07
0238:  MOVWF  FC0
023A:  BSF    FC0.7
023C:  BSF    FC2.0
.................... SET_ADC_CHANNEL(0); 
023E:  MOVLW  00
0240:  MOVWF  01
0242:  MOVF   FC2,W
0244:  ANDLW  C3
0246:  IORWF  01,W
0248:  MOVWF  FC2
.................... while(true) 
.................... { }} 
024A:  BRA    024A
....................  
024C:  SLEEP 
....................  

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
