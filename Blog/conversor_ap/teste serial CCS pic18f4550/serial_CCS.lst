CCS PCH C Compiler, Version 5.007, 61971               28-jul-21 08:48

               Filename:   C:\Users\Fabio T. Brito\Dropbox\IFCE\Disciplinas_IFCE\Apostilas IFCE\Micro\Programas oficiais\Blog\conversor_ap\teste serial CCS pic18f4550\serial_CCS.lst

               ROM used:   204 bytes (1%)
                           Largest free fragment is 32564
               RAM used:   4 (0%) at main() level
                           7 (0%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   0064
.................... #define led pin_d0  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
0004:  DATA 0D,0A
0006:  DATA 53,65
0008:  DATA 6C,65
000A:  DATA 63,69
000C:  DATA 6F,6E
000E:  DATA 65,3A
0010:  DATA 0D,0A
0012:  DATA 00,00
0014:  DATA 20,31
0016:  DATA 29,20
0018:  DATA 4C,20
001A:  DATA 2D,20
001C:  DATA 6C,69
001E:  DATA 67,61
0020:  DATA 72,20
0022:  DATA 6C,65
0024:  DATA 64,20
0026:  DATA 0D,0A
0028:  DATA 00,00
002A:  DATA 20,32
002C:  DATA 29,20
002E:  DATA 44,20
0030:  DATA 2D,20
0032:  DATA 64,65
0034:  DATA 73,6C
0036:  DATA 69,67
0038:  DATA 61,72
003A:  DATA 20,6C
003C:  DATA 65,64
003E:  DATA 20,0D
0040:  DATA 0A,00
0042:  TBLRD*+
0044:  MOVF   FF5,F
0046:  BZ    0062
0048:  MOVFF  FF6,06
004C:  MOVFF  FF7,07
0050:  MOVF   FF5,W
0052:  BTFSS  F9E.4
0054:  BRA    0052
0056:  MOVWF  FAD
0058:  MOVFF  06,FF6
005C:  MOVFF  07,FF7
0060:  BRA    0042
0062:  RETURN 0
....................  
.................... #list 
....................  
.................... #fuses HS,CPUDIV1,PLL5,USBDIV 
.................... #use delay(clock=20000000) 
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
.................... void main() 
0064:  CLRF   FF8
0066:  BCF    FD0.7
0068:  BSF    FB8.3
006A:  MOVLW  08
006C:  MOVWF  FAF
006E:  MOVLW  02
0070:  MOVWF  FB0
0072:  MOVLW  A6
0074:  MOVWF  FAC
0076:  MOVLW  90
0078:  MOVWF  FAB
007A:  MOVF   FC1,W
007C:  ANDLW  C0
007E:  IORLW  0F
0080:  MOVWF  FC1
0082:  MOVLW  07
0084:  MOVWF  FB4
.................... { 
.................... while(true) 
....................    { 
.................... char selection; 
.................... printf("\r\nSelecione:\r\n");//Pequeno menu com as opções 
0086:  MOVLW  04
0088:  MOVWF  FF6
008A:  MOVLW  00
008C:  MOVWF  FF7
008E:  RCALL  0042
.................... printf(" 1) L - ligar led \r\n"); 
0090:  MOVLW  14
0092:  MOVWF  FF6
0094:  MOVLW  00
0096:  MOVWF  FF7
0098:  RCALL  0042
.................... printf(" 2) D - desligar led \r\n"); 
009A:  MOVLW  2A
009C:  MOVWF  FF6
009E:  MOVLW  00
00A0:  MOVWF  FF7
00A2:  RCALL  0042
.................... do    { 
....................       selection=getc(); 
00A4:  BTFSS  F9E.5
00A6:  BRA    00A4
00A8:  MOVFF  FAE,05
....................       } while (!((selection=='L')||(selection=='D')));//Espera que o caractere enviado seja "L" ou "D". 
00AC:  MOVF   05,W
00AE:  SUBLW  4C
00B0:  BZ    00B8
00B2:  MOVF   05,W
00B4:  SUBLW  44
00B6:  BNZ   00A4
.................... if (selection=='L')// se o valor enviado for igual a "L" liga o led no pino D0 
00B8:  MOVF   05,W
00BA:  SUBLW  4C
00BC:  BNZ   00C4
....................       {output_high(led);} 
00BE:  BCF    F95.0
00C0:  BSF    F8C.0
00C2:  BRA    00C8
.................... else 
....................       {output_low(led);}// se o valor enviado for igual a "D" liga o led no pino D0 
00C4:  BCF    F95.0
00C6:  BCF    F8C.0
00C8:  BRA    0086
....................    } 
.................... } 
....................  
00CA:  SLEEP 

Configuration Fuses:
   Word  1: CC24   PLL5 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
