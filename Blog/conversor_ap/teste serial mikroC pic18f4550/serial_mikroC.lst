;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 28/07/2021 08:50:16
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF42  	GOTO        132
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x001C	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x0020	0xA2AB      	BTFSS       RCSTA, 1 
0x0022	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x0024	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x0026	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x0028	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x002C	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x002E	0x0EFF      	MOVLW       _UART1_Write
0x0030	0x6E22      	MOVWF       _UART_Wr_Ptr 
0x0032	0x0EFF      	MOVLW       hi_addr(_UART1_Write)
0x0034	0x6E23      	MOVWF       _UART_Wr_Ptr+1 
0x0036	0x0EFF      	MOVLW       FARG_UART1_Write_data_
0x0038	0x6E24      	MOVWF       _UART_Wr_Ptr+2 
0x003A	0x0EFF      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x003C	0x6E25      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x003E	0x0E1C      	MOVLW       _UART1_Read
0x0040	0x6E1D      	MOVWF       _UART_Rd_Ptr 
0x0042	0x0E00      	MOVLW       hi_addr(_UART1_Read)
0x0044	0x6E1E      	MOVWF       _UART_Rd_Ptr+1 
0x0046	0x0E00      	MOVLW       0
0x0048	0x6E1F      	MOVWF       _UART_Rd_Ptr+2 
0x004A	0x0E00      	MOVLW       0
0x004C	0x6E20      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x004E	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0050	0x6E15      	MOVWF       _UART_Rdy_Ptr 
0x0052	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0054	0x6E16      	MOVWF       _UART_Rdy_Ptr+1 
0x0056	0x0E00      	MOVLW       0
0x0058	0x6E17      	MOVWF       _UART_Rdy_Ptr+2 
0x005A	0x0E00      	MOVLW       0
0x005C	0x6E18      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x005E	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0060	0x6E19      	MOVWF       _UART_Tx_Idle_Ptr 
0x0062	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0064	0x6E1A      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x0066	0x0E00      	MOVLW       0
0x0068	0x6E1B      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x006A	0x0E00      	MOVLW       0
0x006C	0x6E1C      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x006E	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0070	0x0E90      	MOVLW       144
0x0072	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x0074	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x0076	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0078	0xAA9E      	BTFSS       PIR1, 5 
0x007A	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x007C	0xF000CFAE  	MOVFF       RCREG, R0
0x0080	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x0082	0x0012      	RETURN      0
; end of _UART1_Init
_main:
;serial_mikroC.c,2 :: 		void main(){
;serial_mikroC.c,3 :: 		UART1_Init(9600);
0x0084	0x86B8      	BSF         BAUDCON, 3, 0
0x0086	0x0E02      	MOVLW       2
0x0088	0x6EB0      	MOVWF       SPBRGH 
0x008A	0x0E08      	MOVLW       8
0x008C	0x6EAF      	MOVWF       SPBRG 
0x008E	0x84AC      	BSF         TXSTA, 2, 0
0x0090	0xDFCE      	RCALL       _UART1_Init
;serial_mikroC.c,4 :: 		TRISD = 0x00; // Configura porta D como saída
0x0092	0x6A95      	CLRF        TRISD 
;serial_mikroC.c,5 :: 		while(1) // Loop infinito
L_main0:
;serial_mikroC.c,7 :: 		byte_read = UART1_Read(); // Lê o byte enviado pela serial
0x0094	0xDFC3      	RCALL       _UART1_Read
0x0096	0xF021C000  	MOVFF       R0, _byte_read
;serial_mikroC.c,8 :: 		if (byte_read=='L') // se o valor enviado for igual a L liga o led no pino D0
0x009A	0x5000      	MOVF        R0, 0 
0x009C	0x0A4C      	XORLW       76
0x009E	0xB4D8      	BTFSC       STATUS, 2 
;serial_mikroC.c,9 :: 		{PORTD.F0 = 1;}
0x00A0	0x8083      	BSF         PORTD, 0 
L_main2:
;serial_mikroC.c,10 :: 		if (byte_read=='D') // se o valor enviado for igual a D desliga o led no pino D0
0x00A2	0x5021      	MOVF        _byte_read, 0 
0x00A4	0x0A44      	XORLW       68
0x00A6	0xB4D8      	BTFSC       STATUS, 2 
;serial_mikroC.c,11 :: 		{PORTD.F0 = 0;}
0x00A8	0x9083      	BCF         PORTD, 0 
L_main3:
;serial_mikroC.c,12 :: 		}
0x00AA	0xD7F4      	BRA         L_main0
;serial_mikroC.c,13 :: 		}
L_end_main:
0x00AC	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _UART1_Read
0x002E      [86]    _UART1_Init
0x0084      [42]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [4]    _UART_Rdy_Ptr
0x0019       [4]    _UART_Tx_Idle_Ptr
0x001D       [4]    _UART_Rd_Ptr
0x0021       [1]    _byte_read
0x0022       [4]    _UART_Wr_Ptr
0x0F83       [1]    PORTD
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F95       [1]    TRISD
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
